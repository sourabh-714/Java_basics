/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    public boolean hasPath(TreeNode root , int targetSum , int currsum){
        
        
        // if(currsum>targetSum){
        //     return false;
        // }
        if(root==null){
            return false;
        }
        
        currsum+=root.val;
        if(targetSum==currsum && root.left==null && root.right==null){
            return true;
        }
        boolean leftres= hasPath(root.left,targetSum , currsum);
        boolean rightres=hasPath(root.right,targetSum,currsum);
        
        return leftres || rightres;
    }
    public boolean hasPathSum(TreeNode root, int targetSum) {
        
        return     hasPath(root, targetSum , 0);
        
    }
}
