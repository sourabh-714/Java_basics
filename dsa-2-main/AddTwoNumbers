/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode addTwo(ListNode l1, ListNode l2,int carry){
        ListNode head=null;
        if(l1==null && l2==null){
        
            if(carry==1){
                ListNode temp=new ListNode(carry);
                head=temp;
            }
            return head;
        }
        int val1=0,val2=0;
        if(l2==null){
            val2=0;
            val1=l1.val;
        }
        else if(l1==null){
            val1=0;
            val2=l2.val;
        }
        else{
            val1=l1.val;
            val2=l2.val;
        }
        int ans=carry+val1+val2;
        carry=0;
        if(ans>=10){
        carry=1;
        ans=ans%10;    
        }
        head=new ListNode(ans);
        if(l1==null){
         head.next=addTwo(null,l2.next,carry);
        }
        else if(l2==null)
        head.next=addTwo(l1.next,null,carry);
        else{
            head.next=addTwo(l1.next,l2.next,carry);
        }
        
        return head;
    }
    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {
        
        ListNode head=new ListNode(0);
        head.next=addTwo(l1,l2,0);
        return head.next;
    }
}



























